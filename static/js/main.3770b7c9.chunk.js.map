{"version":3,"sources":["comonents/Tabs/Tabs.jsx","comonents/NewTodo/TodoInputForm.jsx","comonents/UI/SvgDelete.jsx","comonents/TodoList/TodoItem.jsx","comonents/TodoList/TodoList.jsx","App.jsx","index.js"],"names":["Tabs","props","tabHandler","e","setStatus","target","id","className","status","onClick","TodoInputForm","action","onSubmit","preventDefault","inputText","setTodos","todos","Math","random","goal","completed","setInputText","console","log","type","placeholder","onChange","value","SvgDelete","xmlns","height","viewBox","width","fill","d","TodoItem","defaultChecked","todo","map","item","filter","TodoList","content","filteredTodos","length","style","textAlign","App","useState","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","localTodos","parse","getLocalTodos","filterHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3770b7c9.chunk.js","sourcesContent":["import \"./Tabs.css\";\n\nconst Tabs = (props) => {\n  const tabHandler = (e) => {\n    props.setStatus(e.target.id);\n  };\n  return (\n    <ul className=\"tab-list\">\n      <li\n        className={`tab-list--item ${\n          props.status === \"all\" ? \"tab-active\" : \"\"\n        }`}\n        id=\"all\"\n        onClick={tabHandler}>\n        All\n      </li>\n      <li\n        className={`tab-list--item ${\n          props.status === \"active\" ? \"tab-active\" : \"\"\n        }`}\n        id=\"active\"\n        onClick={tabHandler}>\n        Active\n      </li>\n      <li\n        className={`tab-list--item ${\n          props.status === \"completed\" ? \"tab-active\" : \"\"\n        }`}\n        id=\"completed\"\n        onClick={tabHandler}>\n        Completed\n      </li>\n    </ul>\n  );\n};\n\nexport default Tabs;\n","import \"./TodoInputForm.css\";\n\nconst TodoInputForm = (props) => {\n  const inputHandler = (e) => {\n    props.setInputText(e.target.value);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (props.inputText === \"\") {\n      console.log(\"No task added!\");\n      return;\n    }\n    props.setTodos([\n      ...props.todos,\n      {\n        id: Math.random() * 100,\n        goal: props.inputText,\n        completed: false,\n      },\n    ]);\n    if (props.status === \"completed\") {\n      props.setStatus(\"all\");\n    }\n    props.setInputText(\"\");\n  };\n\n  return (\n    <form action=\"#\" className=\"form\" onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        placeholder=\"Add details\"\n        onChange={inputHandler}\n        value={props.inputText}\n      />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default TodoInputForm;\n","import \"./SvgDelete.css\";\n\nfunction SvgDelete(props) {\n  return (\n    <svg\n      className={props.className}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      height=\"24px\"\n      viewBox=\"0 0 24 24\"\n      width=\"24px\"\n      fill=\"#658ec6\">\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n      <path d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7z\" />\n    </svg>\n  );\n}\n\nexport default SvgDelete;\n","import SvgDelete from \"../UI/SvgDelete\";\n\nconst TodoItem = (props) => {\n  const checkBoxHandler = () => {\n    props.setTodos(\n      props.todos.map((item) => {\n        if (item.id === props.todo.id)\n          return { ...item, completed: !item.completed };\n        return item;\n      })\n    );\n  };\n  const deleteHandler = () => {\n    props.setTodos(props.todos.filter((item) => item.id !== props.todo.id));\n  };\n  return (\n    <li className=\"todo-list__item\">\n      <input\n        type=\"checkbox\"\n        defaultChecked={props.todo.completed}\n        onChange={checkBoxHandler}\n      />\n      <label className={props.todo.completed ? \"strikethrough \" : \"\"}>\n        {props.goal}\n      </label>\n      {props.status === \"completed\" ? (\n        <div onClick={deleteHandler}>\n          <SvgDelete className=\"icon-delete\" />\n        </div>\n      ) : (\n        \"\"\n      )}\n    </li>\n  );\n};\nexport default TodoItem;\n","import \"./TodoList.css\";\nimport TodoItem from \"./TodoItem\";\nimport SvgDelete from \"../UI/SvgDelete\";\n\nconst TodoList = (props) => {\n  const deleteAllHandler = () => {\n    props.setTodos(props.todos.filter((item) => !item.completed));\n  };\n\n  let content;\n\n  if (props.filteredTodos.length > 0) {\n    content = props.filteredTodos.map((todo) => (\n      <TodoItem\n        key={todo.id}\n        goal={todo.goal}\n        todo={todo}\n        todos={props.todos}\n        setTodos={props.setTodos}\n        status={props.status}\n      />\n    ));\n  } else if (props.filteredTodos.length === 0 && props.status !== \"completed\") {\n    content = <p style={{ textAlign: \"center\" }}>Nothing to display here!</p>;\n  } else {\n    content = (\n      <p style={{ textAlign: \"center\" }}>\n        Hurrah!ðŸ¥³ You have completed all your tasks.\n      </p>\n    );\n  }\n  return (\n    <ul className=\"todo-list\">\n      {content}\n      {props.status === \"completed\" && props.filteredTodos.length > 0 ? (\n        <button onClick={deleteAllHandler}>\n          <SvgDelete className=\"icon-delete-btn\" />\n          Delete all\n        </button>\n      ) : (\n        \"\"\n      )}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Tabs from \"./comonents/Tabs/Tabs\";\nimport TodoInputForm from \"./comonents/NewTodo/TodoInputForm\";\nimport TodoList from \"./comonents/TodoList/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Use effect\n  //Run once use effect\n  useEffect(() => {\n    const getLocalTodos = () => {\n      if (localStorage.getItem(\"todos\") === null) {\n        localStorage.setItem(\"todos\", JSON.stringify([]));\n      } else {\n        let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n        setTodos(localTodos);\n      }\n    };\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"active\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1 className=\"heading--1\">#todo</h1>\n      </header>\n      <main className=\"main\">\n        <Tabs status={status} setStatus={setStatus} />\n        <TodoInputForm\n          inputText={inputText}\n          setInputText={setInputText}\n          todos={todos}\n          setTodos={setTodos}\n          setStatus={setStatus}\n          status={status}\n        />\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          filteredTodos={filteredTodos}\n          status={status}\n        />\n      </main>\n      <div className=\"circle-1\"></div>\n      <div className=\"circle-2\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}